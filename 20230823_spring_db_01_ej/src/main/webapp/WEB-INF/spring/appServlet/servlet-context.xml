<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kh.lclass.db1" />
	
	<!-- 방법 1 @Aspect AOP annotation -->
	<aop:aspectj-autoproxy/>
	<!-- 방법 2 
	<beans:bean class="kh.lclass.db1.common.AdviceLogXml" id="adviceLogXml"/>
	<aop:config>
		<aop:pointcut id="daoPointCut" expression="execution(public * kh.lclass.db1..*Dao.*(..))"/>
		<aop:pointcut id="servicePointCut" expression="execution(public * kh.lclass.db1..*Service.*(..))"/>
		<aop:pointcut id="controllerPointCut" expression="execution(public * kh.lclass.db1..*Controller.*(..))"/>
		<aop:aspect ref="adviceLogXml">
			<aop:around method="aroundDaoLog" pointcut-ref="daoPointCut"/>
			<aop:around method="aroundSrvLog" pointcut-ref="servicePointCut"/>
			<aop:around method="aroundCtrLog" pointcut-ref="controllerPointCut"/>
		</aop:aspect>
	</aop:config>
	 -->
		
	<!-- Interceptor 인터셉터 -->
	<!-- Interceptor를 위한 로그인 객체(implements HandlerInterceptor)생성 -->
	<!-- 
	<beans:bean class="kh.lclass.db1.common.LoginInterceptor" id="loginInterceptor"/>
	 -->
	<!-- Interceptor 로그인 설정 -->
	<!-- 
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/resources/**"/>
			<exclude-mapping path="/login"/>
			<exclude-mapping path="/singup"/>
			<exclude-mapping path="/findid"/>
			<exclude-mapping path="/findpwd"/>
			<exclude-mapping path="/shop/**"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>		
	</interceptors>
	 -->
	 
	<!-- File Upload : bean 생성 중요!!! id="multipartResolver" 반드시 !!! -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
</beans:beans>
